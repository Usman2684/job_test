{"version":3,"sources":["actions/types.js","actions/alert.js","actions/auth.js","components/Alert.js","components/Navbar.js","hocs/Layout.js","containers/Home.js","containers/Google.js","containers/Facebook.js","containers/Dashboard.js","containers/Login.js","containers/Signup.js","containers/Activate.js","containers/ResetPassword.js","containers/ResetPasswordConfirm.js","reducers/auth.js","reducers/alert.js","reducers/index.js","store.js","App.js","index.js"],"names":["SIGNUP_SUCCESS","SIGNUP_FAIL","LOGIN_SUCCESS","LOGIN_FAIL","AUTHENTICATED_SUCCESS","AUTHENTICATED_FAIL","REFRESH_SUCCESS","REFRESH_FAIL","USER_LOADED_SUCCESS","USER_LOADED_FAIL","ACTIVATION_SUCCESS","ACTIVATION_FAIL","RESET_PASSWORD_SUCCESS","RESET_PASSWORD_FAIL","RESET_PASSWORD_CONFIRM_SUCCESS","RESET_PASSWORD_CONFIRM_FAIL","GOOGLE_AUTH_SUCCESS","GOOGLE_AUTH_FAIL","FACEBOOK_AUTH_SUCCESS","FACEBOOK_AUTH_FAIL","SET_AUTH_LOADING","REMOVE_AUTH_LOADING","LOGOUT","SET_ALERT","REMOVE_ALERT","setAlert","msg","alertType","timeout","dispatch","type","payload","setTimeout","load_user","a","localStorage","getItem","config","headers","axios","get","process","res","status","data","connect","state","alert","className","style","width","margin","isAuthenticated","auth","logout","useState","redirect","setRedirect","authLinks","onClick","href","guestLinks","to","getNavbar","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","exact","check_authenticated","body","JSON","stringify","token","post","refresh","children","useEffect","home","google_authenticate","code","details","formBody","Object","keys","map","key","encodeURIComponent","join","setRediect","location","useLocation","values","queryString","parse","search","fetchData","color","height","facebook_authenticate","dashboard","loading","login","email","password","formData","setFormData","window","scrollTo","onChange","e","target","name","value","continue_with_google","replace","authorization_url","continue_with_facebook","onSubmit","preventDefault","placeholder","required","minLength","signup","first_name","last_name","re_password","accountCreated","setAccountCreated","activate","uid","match","activated","setActivated","marginTop","params","reset_password","requestSent","setRequestSent","reset_password_confirm","new_password","re_new_password","initialState","access","user","combineReducers","action","removeItem","setItem","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","App","path","component","Home","Dashboard","Login","Signup","Google","Facebook","Activate","ResetPassword","ResetPasswordConfirm","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e2e4fa44.chunk.js","sourcesContent":["// Authentication\nexport const SIGNUP_SUCCESS = 'SIGNUP_SUCCESS';\nexport const SIGNUP_FAIL = 'SIGNUP_FAIL';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const AUTHENTICATED_SUCCESS = 'AUTHENTICATED_SUCCESS';\nexport const AUTHENTICATED_FAIL = 'AUTHENTICATED_FAIL';\nexport const REFRESH_SUCCESS = 'REFRESH_SUCCESS';\nexport const REFRESH_FAIL = 'REFRESH_FAIL';\nexport const USER_LOADED_SUCCESS = 'USER_LOADED_SUCCESS';\nexport const USER_LOADED_FAIL = 'USER_LOADED_FAIL';\nexport const ACTIVATION_SUCCESS = 'ACTIVATION_SUCCESS';\nexport const ACTIVATION_FAIL = 'ACTIVATION_FAIL';\nexport const RESET_PASSWORD_SUCCESS = 'RESET_PASSWORD_SUCCESS';\nexport const RESET_PASSWORD_FAIL = 'RESET_PASSWORD_FAIL';\nexport const RESET_PASSWORD_CONFIRM_SUCCESS = 'RESET_PASSWORD_CONFIRM_SUCCESS';\nexport const RESET_PASSWORD_CONFIRM_FAIL = 'RESET_PASSWORD_CONFIRM_FAIL';\nexport const GOOGLE_AUTH_SUCCESS = 'GOOGLE_AUTH_SUCCESS';\nexport const GOOGLE_AUTH_FAIL = 'GOOGLE_AUTH_FAIL';\nexport const FACEBOOK_AUTH_SUCCESS = 'FACEBOOK_AUTH_SUCCESS';\nexport const FACEBOOK_AUTH_FAIL = 'FACEBOOK_AUTH_FAIL';\nexport const SET_AUTH_LOADING = 'SET_AUTH_LOADING';\nexport const REMOVE_AUTH_LOADING = 'REMOVE_AUTH_LOADING';\nexport const LOGOUT = 'LOGOUT';\n\n// Alerts\nexport const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\n","import {\n    SET_ALERT,\n    REMOVE_ALERT,\n} from './types';\n\nexport const setAlert = (msg, alertType, timeout = 5000) => dispatch => {\n    dispatch({\n        type: SET_ALERT,\n        payload: { msg, alertType }\n    });\n\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), timeout);\n};\n","import axios from 'axios';\nimport { setAlert } from './alert';\nimport {\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    FACEBOOK_AUTH_SUCCESS,\n    FACEBOOK_AUTH_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    REFRESH_SUCCESS,\n    REFRESH_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    RESET_PASSWORD_SUCCESS,\n    RESET_PASSWORD_FAIL,\n    RESET_PASSWORD_CONFIRM_SUCCESS,\n    RESET_PASSWORD_CONFIRM_FAIL,\n    SET_AUTH_LOADING,\n    REMOVE_AUTH_LOADING,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    LOGOUT\n} from './types';\n\nexport const check_authenticated = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        };\n\n        const body = JSON.stringify({\n            token: localStorage.getItem('access')\n        });\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/verify/`, body, config);\n\n            if (res.status === 200) {\n                dispatch({\n                    type: AUTHENTICATED_SUCCESS\n                });\n            } else {\n                dispatch({\n                    type: AUTHENTICATED_FAIL\n                });\n            }\n        } catch (err) {\n            dispatch({\n                type: AUTHENTICATED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: AUTHENTICATED_FAIL\n        });\n    }\n};\n\nexport const signup = (first_name, last_name, email, password, re_password) => async dispatch => {\n    dispatch({\n        type: SET_AUTH_LOADING\n    });\n    \n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({\n        first_name,\n        last_name,\n        email,\n        password,\n        re_password\n    });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/`, body, config);\n\n        if (res.status === 201) {\n            dispatch({\n                type: SIGNUP_SUCCESS,\n                payload: res.data\n            });\n            dispatch(setAlert('We sent you an email, please activate your account', 'success'));\n        } else {\n            dispatch({\n                type: SIGNUP_FAIL\n            });\n            dispatch(setAlert('Error creating account', 'danger'));\n        }\n\n        dispatch({\n            type: REMOVE_AUTH_LOADING\n        });\n    } catch (err) {\n        dispatch({\n            type: SIGNUP_FAIL\n        });\n        dispatch({\n            type: REMOVE_AUTH_LOADING\n        });\n        dispatch(setAlert('Error creating account', 'danger'));\n    }\n};\n\nexport const load_user = () => async dispatch => {\n    if (localStorage.getItem('access')) {\n        const config = {\n            headers: {\n                'Authorization': `JWT ${localStorage.getItem('access')}`,\n                'Accept': 'application/json'\n            }\n        };\n\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/users/me/`, config);\n\n            if (res.status === 200) {\n                dispatch({\n                    type: USER_LOADED_SUCCESS,\n                    payload: res.data\n                });\n            } else {\n                dispatch({\n                    type: USER_LOADED_FAIL\n                });\n            }\n        } catch (err) {\n            dispatch({\n                type: USER_LOADED_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: USER_LOADED_FAIL\n        });\n    }\n};\n\nexport const login = (email, password) => async dispatch => {\n    dispatch({\n        type: SET_AUTH_LOADING\n    });\n    \n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({\n        email,\n        password\n    });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/create/`, body, config);\n\n        if (res.status === 200) {\n            dispatch({\n                type: LOGIN_SUCCESS,\n                payload: res.data\n            });\n            dispatch(load_user());\n            dispatch({\n                type: REMOVE_AUTH_LOADING\n            });\n            dispatch(setAlert('Logged in successfully', 'success'));\n        } else {\n            dispatch({\n                type: LOGIN_FAIL\n            });\n            dispatch({\n                type: REMOVE_AUTH_LOADING\n            });\n            dispatch(setAlert('Error authenticating', 'danger'));\n        }\n    } catch (err) {\n        dispatch({\n            type: LOGIN_FAIL\n        });\n        dispatch({\n            type: REMOVE_AUTH_LOADING\n        });\n        dispatch(setAlert('Error authenticating', 'danger'));\n    }\n};\n\nexport const google_authenticate = (state, code) => async dispatch => {\n    if (state && code && !localStorage.getItem('access')) {\n        dispatch({\n            type: SET_AUTH_LOADING\n        });\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        };\n\n        const details = {\n            'state': state,\n            'code': code\n        };\n\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?${formBody}`, config);\n\n            if (res.status === 201) {\n                dispatch({\n                    type: GOOGLE_AUTH_SUCCESS,\n                    payload: res.data\n                });\n                dispatch(load_user());\n                dispatch({\n                    type: REMOVE_AUTH_LOADING\n                });\n                dispatch(setAlert('Logged in successfully', 'success'));\n            } else {\n                dispatch({\n                    type: GOOGLE_AUTH_FAIL\n                });\n                dispatch({\n                    type: REMOVE_AUTH_LOADING\n                });\n                dispatch(setAlert('Error authenticating', 'danger'));\n            }\n        } catch (err) {\n            dispatch({\n                type: GOOGLE_AUTH_FAIL\n            });\n            dispatch({\n                type: REMOVE_AUTH_LOADING\n            });\n            dispatch(setAlert('Error authenticating', 'danger'));\n        }\n    }\n};\n\nexport const facebook_authenticate = (state, code) => async dispatch => {\n    if (state && code && !localStorage.getItem('access')) {\n        dispatch({\n            type: SET_AUTH_LOADING\n        });\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/x-www-form-urlencoded'\n            }\n        };\n\n        const details = {\n            'state': state,\n            'code': code\n        };\n\n        const formBody = Object.keys(details).map(key => encodeURIComponent(key) + '=' + encodeURIComponent(details[key])).join('&');\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?${formBody}`, config);\n\n            if (res.status === 201) {\n                dispatch({\n                    type: FACEBOOK_AUTH_SUCCESS,\n                    payload: res.data\n                });\n                dispatch(load_user());\n                dispatch({\n                    type: REMOVE_AUTH_LOADING\n                });\n                dispatch(setAlert('Logged in successfully', 'success'));\n            } else {\n                dispatch({\n                    type: FACEBOOK_AUTH_FAIL\n                });\n                dispatch({\n                    type: REMOVE_AUTH_LOADING\n                });\n                dispatch(setAlert('Error authenticating', 'danger'));\n            }\n        } catch (err) {\n            dispatch({\n                type: FACEBOOK_AUTH_FAIL\n            });\n            dispatch({\n                type: REMOVE_AUTH_LOADING\n            });\n            dispatch(setAlert('Error authenticating', 'danger'));\n        }\n    }\n};\n\nexport const activate = (uid, token) => async dispatch => {\n    dispatch({\n        type: SET_AUTH_LOADING\n    });\n    \n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({\n        uid,\n        token\n    });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/activation/`, body, config);\n\n        if (res.status === 204) {\n            dispatch({\n                type: ACTIVATION_SUCCESS\n            });\n            dispatch(setAlert('Successfully activated your Account', 'success'));\n        } else {\n            dispatch({\n                type: ACTIVATION_FAIL\n            });\n            dispatch(setAlert('Error activating account', 'danger'));\n        }\n\n        dispatch({\n            type: REMOVE_AUTH_LOADING\n        });\n    } catch (err) {\n        dispatch({\n            type: ACTIVATION_FAIL\n        });\n        dispatch({\n            type: REMOVE_AUTH_LOADING\n        });\n        dispatch(setAlert('Error creating account', 'danger'));\n    }\n};\n\nexport const refresh = () => async dispatch => {\n    if (localStorage.getItem('refresh')) {\n        const config = {\n            headers: {\n                'Accept': 'application/json',\n                'Content-Type': 'application/json'\n            }\n        };\n\n        const body = JSON.stringify({\n            refresh: localStorage.getItem('refresh')\n        });\n\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/jwt/refresh/`, body, config);\n\n            if (res.status === 200) {\n                dispatch({\n                    type: REFRESH_SUCCESS,\n                    payload: res.data\n                });\n            } else {\n                dispatch({\n                    type: REFRESH_FAIL\n                });\n            }\n        } catch (err) {\n            dispatch({\n                type: REFRESH_FAIL\n            });\n        }\n    } else {\n        dispatch({\n            type: REFRESH_FAIL\n        });\n    }\n};\n\nexport const reset_password = (email) => async dispatch => {\n    dispatch({\n        type: SET_AUTH_LOADING\n    });\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({ email });\n\n    try {\n        const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password/`, body, config);\n\n        if (res.status === 204) {\n            dispatch({\n                type: RESET_PASSWORD_SUCCESS\n            });\n            dispatch({\n                type: REMOVE_AUTH_LOADING\n            });\n            dispatch(setAlert('Password reset email sent', 'success'));\n        } else {\n            dispatch({\n                type: RESET_PASSWORD_FAIL\n            });\n            dispatch({\n                type: REMOVE_AUTH_LOADING\n            });\n            dispatch(setAlert('Error sending password reset email', 'danger'));\n        }\n    } catch (err) {\n        dispatch({\n            type: RESET_PASSWORD_FAIL\n        });\n        dispatch({\n            type: REMOVE_AUTH_LOADING\n        });\n        dispatch(setAlert('Error sending password reset email', 'danger'));\n    }\n};\n\nexport const reset_password_confirm = (uid, token, new_password, re_new_password) => async dispatch => {\n    dispatch({\n        type: SET_AUTH_LOADING\n    });\n\n    const config = {\n        headers: {\n            'Content-Type': 'application/json'\n        }\n    };\n\n    const body = JSON.stringify({\n        uid,\n        token,\n        new_password,\n        re_new_password\n    });\n\n    if (new_password !== re_new_password) {\n        dispatch({\n            type: RESET_PASSWORD_CONFIRM_FAIL\n        });\n        dispatch({\n            type: REMOVE_AUTH_LOADING\n        });\n        dispatch(setAlert('Passwords do not match', 'danger'));\n    } else {\n        try {\n            const res = await axios.post(`${process.env.REACT_APP_API_URL}/auth/users/reset_password_confirm/`, body, config);\n\n            if (res.status === 204) {\n                dispatch({\n                    type: RESET_PASSWORD_CONFIRM_SUCCESS\n                });\n                dispatch({\n                    type: REMOVE_AUTH_LOADING\n                });\n                dispatch(setAlert('Password has been reset successfully', 'success'));\n            } else {\n                dispatch({\n                    type: RESET_PASSWORD_CONFIRM_FAIL\n                });\n                dispatch({\n                    type: REMOVE_AUTH_LOADING\n                });\n                dispatch(setAlert('Error resetting your password', 'danger'));\n            }\n        } catch (err) {\n            dispatch({\n                type: RESET_PASSWORD_CONFIRM_FAIL\n            });\n            dispatch({\n                type: REMOVE_AUTH_LOADING\n            });\n            dispatch(setAlert('Error resetting your password', 'danger'));\n        }\n    }\n};\n\nexport const logout = () => dispatch => {\n    dispatch({\n        type: LOGOUT\n    });\n    dispatch(setAlert('Loggout Out', 'success'));\n};\n","import React, { Fragment } from 'react';\nimport { connect } from 'react-redux';\n\nconst Alert = ({ alert }) => {\n    const displayAlert = () => {\n        if (alert !== null) {\n            return (\n                <div\n                    className={`btn btn-${alert.alertType}`}\n                    style={{ width: '95%', margin: '5px 2.5%' }}\n                >\n                    {alert.msg}\n                </div>\n            );\n        } else {\n            return (\n                <Fragment></Fragment>\n            );\n        }\n    };\n\n    return (\n        <Fragment>\n            {displayAlert()}\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    alert: state.alert.alert\n});\n\nexport default connect(mapStateToProps)(Alert);\n","import React, { useState, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { logout } from '../actions/auth';\nimport { Link, NavLink } from 'react-router-dom';\nimport Alert from './Alert';\n\nconst Navbar = ({\n    isAuthenticated,\n    logout\n}) => {\n    const [redirect, setRedirect] = useState(false);\n\n    const logoutHandler = () => {\n        logout();\n        setRedirect(true);\n    };\n\n    const authLinks = (\n        <li className='nav-item'>\n            <a \n                className='nav-link' \n                onClick={logoutHandler}\n                href='#!'\n            >\n                Logout\n            </a>\n        </li>\n    );\n\n    const guestLinks = (\n        <Fragment>\n            <li className='nav-item'>\n                <NavLink \n                    className='nav-link' \n                    to='/login'\n                >\n                    Login\n                </NavLink>\n            </li>\n            <li className='nav-item'>\n                <NavLink \n                    className='nav-link' \n                    to='/signup'\n                >\n                    Sign Up\n                </NavLink>\n            </li>\n        </Fragment>\n    );\n\n    const getNavbar = () => (\n        <nav className='navbar navbar-expand-lg navbar-light bg-light'>\n            <Link className='navbar-brand' to='/'>Shop Time</Link>\n            <button \n                className='navbar-toggler' \n                type='button' \n                data-toggle='collapse' \n                data-target='#navbarNav' \n                aria-controls='navbarNav' \n                aria-expanded='false' \n                aria-label='Toggle navigation'\n            >\n                <span className='navbar-toggler-icon'></span>\n            </button>\n            <div className='collapse navbar-collapse' id='navbarNav'>\n                <ul className='navbar-nav'>\n                    <li className='nav-item'>\n                        <NavLink \n                            className='nav-link' \n                            exact\n                            to='/'\n                        >\n                            Home\n                        </NavLink>\n                    </li>\n                    {\n                        isAuthenticated ? authLinks : guestLinks\n                    }\n                </ul>\n            </div>\n        </nav>\n    );\n\n    const renderNavbar = () => {\n        if (redirect) {\n            return (\n                <Fragment>\n                    {getNavbar()}\n                    <Alert />\n                    <Redirect to='/' />\n                </Fragment>\n            );\n        } else {\n            return (\n                <Fragment>\n                    {getNavbar()}\n                    <Alert />\n                </Fragment>\n            );\n        }\n    };\n\n    return (\n        <Fragment>\n            {renderNavbar()}\n        </Fragment>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated\n});\n\nexport default connect(mapStateToProps, {\n    logout\n})(Navbar);\n","import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { check_authenticated, load_user, refresh } from '../actions/auth';\nimport Navbar from '../components/Navbar';\n\nconst Layout = ({ \n    check_authenticated,\n    load_user,\n    refresh,\n    children\n}) => {\n    useEffect(() => {\n        refresh();\n        check_authenticated();\n        load_user();\n    }, []);\n\n    return (\n        <div>\n            <Navbar />\n            {children}\n        </div>\n    );\n}\n\nexport default connect(null, {\n    check_authenticated,\n    load_user,\n    refresh\n})(Layout);\n","import React from 'react';\n\nconst home = () => (\n    <div>\n        Home Page\n    </div>\n);\n\nexport default home;\n","import React, { useState, useEffect } from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { google_authenticate } from '../actions/auth';\nimport queryString from 'query-string';\nimport Loader from 'react-loader-spinner';\n\nconst Google = ({ google_authenticate }) => {\n    const [redirect, setRediect] = useState(false);\n    let location = useLocation();\n\n    useEffect(() => {\n        const values = queryString.parse(location.search);\n        const state = values.state ? values.state : null;\n        const code = values.code ? values.code : null;\n\n        if (state && code) {\n            const fetchData = async () => {\n                await google_authenticate(state, code);\n                setRediect(true);\n            };\n\n            fetchData();\n        }\n    }, [location]);\n\n    if (redirect)\n        return <Redirect to='/dashboard' />;\n    return (\n        <div className='mt-5 d-flex justify-content-center align-items-center'>\n            <Loader\n                type='Oval'\n                color='#424242'\n                height={50}\n                width={50}\n            />\n        </div>\n    );\n};\n\nexport default connect(null, { google_authenticate })(Google);\n","import React, { useState, useEffect } from 'react';\nimport { Redirect, useLocation } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { facebook_authenticate } from '../actions/auth';\nimport queryString from 'query-string';\nimport Loader from 'react-loader-spinner';\n\nconst Facebook = ({ facebook_authenticate }) => {\n    const [redirect, setRediect] = useState(false);\n    let location = useLocation();\n\n    useEffect(() => {\n        const values = queryString.parse(location.search);\n        const state = values.state ? values.state : null;\n        const code = values.code ? values.code : null;\n\n        if (state && code) {\n            const fetchData = async () => {\n                await facebook_authenticate(state, code);\n                setRediect(true);\n            };\n\n            fetchData();\n        }\n    }, [location]);\n\n    if (redirect)\n        return <Redirect to='/dashboard' />;\n    return (\n        <div className='mt-5 d-flex justify-content-center align-items-center'>\n            <Loader\n                type='Oval'\n                color='#424242'\n                height={50}\n                width={50}\n            />\n        </div>\n    );\n};\n\nexport default connect(null, { facebook_authenticate })(Facebook);\n","import React from 'react';\n\nconst dashboard = () => (\n    <div>\n        Dashbaord\n    </div>\n);\n\nexport default dashboard;\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { login } from '../actions/auth';\nimport Loader from 'react-loader-spinner';\n\nconst Login = ({ login, isAuthenticated, loading }) => {\n    const [formData, setFormData] = useState({\n        email: '',\n        password: ''\n    });\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    });\n\n    const { \n        email,\n        password\n    } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        login(email, password);\n    };\n\n    const continue_with_google = async () => {\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`);\n\n            window.location.replace(res.data.authorization_url);\n        } catch (err) {\n\n        }\n    };\n\n    const continue_with_facebook = async () => {\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?redirect_uri=${process.env.REACT_APP_API_URL}/facebook`);\n\n            window.location.replace(res.data.authorization_url);\n        } catch (err) {\n\n        }\n    };\n\n    if (isAuthenticated)\n        return <Redirect to='/dashboard' />;\n\n    return (\n        <div className='container mt-5'>\n            <h1>Sign In</h1>\n            <p>Sign into your Account</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email*'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password*'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                {\n                    loading ? (\n                        <div className='mt-3 d-flex justify-content-center align-items-center'>\n                            <Loader\n                                type='Oval'\n                                color='#424242'\n                                height={50}\n                                width={50}\n                            />\n                        </div>\n                    ) : (\n                        <button className='btn btn-primary' type='submit'>\n                            Login\n                        </button>\n                    )\n                }\n            </form>\n            <button className='btn btn-danger mt-3' onClick={continue_with_google}>\n                Continue With Google\n            </button>\n            <br />\n            <button className='btn btn-primary mt-3' onClick={continue_with_facebook}>\n                Continue With Facebook\n            </button>\n            <p className='mt-3'>\n                Don't have an account? <Link to='/signup'>Sign Up</Link>\n            </p>\n            <p className='mt-3'>\n                Forgot your Password? <Link to='/reset_password'>Reset Password</Link>\n            </p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    loading: state.auth.loading\n});\n\nexport default connect(mapStateToProps, { login })(Login);\n","import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\nimport { Link, Redirect } from 'react-router-dom';\nimport { signup } from '../actions/auth';\nimport Loader from 'react-loader-spinner';\n\nconst Signup = ({ signup, isAuthenticated, loading }) => {\n    const [accountCreated, setAccountCreated] = useState(false);\n    const [formData, setFormData] = useState({\n        first_name: '',\n        last_name: '',\n        email: '',\n        password: '',\n        re_password: ''\n    });\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    });\n\n    const { \n        first_name,\n        last_name,\n        email,\n        password,\n        re_password\n    } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        signup(first_name, last_name, email, password, re_password);\n        setAccountCreated(true);\n    };\n\n    const continue_with_google = async () => {\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/google-oauth2/?redirect_uri=${process.env.REACT_APP_API_URL}/google`);\n\n            window.location.replace(res.data.authorization_url);\n        } catch (err) {\n\n        }\n    };\n\n    const continue_with_facebook = async () => {\n        try {\n            const res = await axios.get(`${process.env.REACT_APP_API_URL}/auth/o/facebook/?redirect_uri=${process.env.REACT_APP_API_URL}/facebook`);\n\n            window.location.replace(res.data.authorization_url);\n        } catch (err) {\n\n        }\n    };\n\n    if (isAuthenticated)\n        return <Redirect to='/' />;\n    else if (accountCreated)\n        <Redirect to='/login' />;\n\n    return (\n        <div className='container mt-5'>\n            <h1>Sign Up</h1>\n            <p>Create your Account</p>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='First Name*'\n                        name='first_name'\n                        value={first_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='text'\n                        placeholder='Last Name*'\n                        name='last_name'\n                        value={last_name}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='email'\n                        placeholder='Email*'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Password*'\n                        name='password'\n                        value={password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm Password*'\n                        name='re_password'\n                        value={re_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                {\n                    loading ? (\n                        <div className='mt-3 d-flex justify-content-center align-items-center'>\n                            <Loader\n                                type='Oval'\n                                color='#424242'\n                                height={50}\n                                width={50}\n                            />\n                        </div>\n                    ) : (\n                        <button className='btn btn-primary' type='submit'>\n                            Register\n                        </button>\n                    )\n                }\n            </form>\n            <button className='btn btn-danger mt-3' onClick={continue_with_google}>\n                Continue With Google\n            </button>\n            <br />\n            <button className='btn btn-primary mt-3' onClick={continue_with_facebook}>\n                Continue With Facebook\n            </button>\n            <p className='mt-3'>\n                Already have an account? <Link to='/login'>Sign In</Link>\n            </p>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    isAuthenticated: state.auth.isAuthenticated,\n    loading: state.auth.loading\n});\n\nexport default connect(mapStateToProps, { signup })(Signup);\n","import React, { useState } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { activate } from '../actions/auth';\nimport Loader from 'react-loader-spinner';\n\nconst Activate = ({ match, loading, activate }) => {\n    const [activated, setActivated] = useState(false);\n\n    const activate_account = () => {\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        activate(uid, token);\n        setActivated(true);\n    };\n\n    if (activated && !loading)\n    return <Redirect to='/' />;\n\n    return (\n        <div className='container'>\n            <div \n                className='d-flex justify-content-center align-items-center flex-column'\n                style={{ marginTop: '200px' }}\n            >\n                <h1>Activate your Account:</h1>\n                {\n                    loading ? (\n                        <div className='mt-3 d-flex justify-content-center align-items-center'>\n                            <Loader\n                                type='Oval'\n                                color='#424242'\n                                height={50}\n                                width={50}\n                            />\n                        </div>\n                    ) : (\n                        <button\n                            className='btn btn-primary'\n                            style={{ marginTop: '50px' }}\n                            type='button'\n                            onClick={activate_account}\n                        >\n                            Activate\n                        </button>\n                    )\n                }\n            </div>\n        </div>\n    )\n};\n\nconst mapStateToProps = state => ({\n    loading: state.auth.loading\n});\n\nexport default connect(mapStateToProps, {\n    activate\n})(Activate);\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password } from '../actions/auth';\nimport Loader from 'react-loader-spinner';\n\nconst ResetPassword = ({ loading, reset_password }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        email: ''\n    });\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    });\n\n    const { email } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        reset_password(email);\n        setRequestSent(true);\n    };\n\n    if (requestSent && !loading)\n        return <Redirect to='/' />;\n\n    return (\n        <div className='container mt-5'>\n            <h1 className='mb-5'>Request Password Reset:</h1>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control mb-3'\n                        type='email'\n                        placeholder='Your Email'\n                        name='email'\n                        value={email}\n                        onChange={e => onChange(e)}\n                        required\n                    />\n                </div>\n                {\n                    loading ? (\n                        <div className='mt-3 d-flex justify-content-center align-items-center'>\n                            <Loader\n                                type='Oval'\n                                color='#424242'\n                                height={50}\n                                width={50}\n                            />\n                        </div>\n                    ) : (\n                        <button className='btn btn-primary' type='submit'>\n                            Reset Password\n                        </button>\n                    )\n                }\n            </form>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    loading: state.auth.loading\n});\n\nexport default connect(mapStateToProps, { reset_password })(ResetPassword);\n","import React, { useState, useEffect } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { reset_password_confirm } from '../actions/auth';\nimport Loader from 'react-loader-spinner';\n\nconst ResetPasswordConfirm = ({ match, loading, reset_password_confirm }) => {\n    const [requestSent, setRequestSent] = useState(false);\n    const [formData, setFormData] = useState({\n        new_password: '',\n        re_new_password: ''\n    });\n\n    useEffect(() => {\n        window.scrollTo(0, 0);\n    });\n\n    const { new_password, re_new_password } = formData;\n\n    const onChange = e => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n    const onSubmit = e => {\n        e.preventDefault();\n\n        const uid = match.params.uid;\n        const token = match.params.token;\n\n        reset_password_confirm(uid, token, new_password, re_new_password);\n        if (new_password === re_new_password)\n            setRequestSent(true);\n    };\n\n    if (requestSent && !loading)\n        return <Redirect to='/' />;\n\n    return (\n        <div className='container mt-5'>\n            <h1 className='mb-5'>Reset Your Password:</h1>\n            <form onSubmit={e => onSubmit(e)}>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='New Password'\n                        name='new_password'\n                        value={new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                <div className='form-group'>\n                    <input\n                        className='form-control'\n                        type='password'\n                        placeholder='Confirm New Password'\n                        name='re_new_password'\n                        value={re_new_password}\n                        onChange={e => onChange(e)}\n                        minLength='6'\n                        required\n                    />\n                </div>\n                {\n                    loading ? (\n                        <div className='mt-3 d-flex justify-content-center align-items-center'>\n                            <Loader\n                                type='Oval'\n                                color='#424242'\n                                height={50}\n                                width={50}\n                            />\n                        </div>\n                    ) : (\n                        <button className='btn btn-primary' type='submit'>\n                            Reset Password\n                        </button>\n                    )\n                }\n            </form>\n        </div>\n    );\n};\n\nconst mapStateToProps = state => ({\n    loading: state.auth.loading\n});\n\nexport default connect(mapStateToProps, { reset_password_confirm })(ResetPasswordConfirm);\n","import {\n    SIGNUP_SUCCESS,\n    SIGNUP_FAIL,\n    LOGIN_SUCCESS,\n    LOGIN_FAIL,\n    GOOGLE_AUTH_SUCCESS,\n    GOOGLE_AUTH_FAIL,\n    FACEBOOK_AUTH_SUCCESS,\n    FACEBOOK_AUTH_FAIL,\n    AUTHENTICATED_SUCCESS,\n    AUTHENTICATED_FAIL,\n    REFRESH_SUCCESS,\n    REFRESH_FAIL,\n    USER_LOADED_SUCCESS,\n    USER_LOADED_FAIL,\n    ACTIVATION_SUCCESS,\n    ACTIVATION_FAIL,\n    RESET_PASSWORD_SUCCESS,\n    RESET_PASSWORD_FAIL,\n    RESET_PASSWORD_CONFIRM_SUCCESS,\n    RESET_PASSWORD_CONFIRM_FAIL,\n    SET_AUTH_LOADING,\n    REMOVE_AUTH_LOADING,\n    LOGOUT\n} from '../actions/types';\n\nconst initialState = {\n    access: localStorage.getItem('access'),\n    refresh: localStorage.getItem('refresh'),\n    isAuthenticated: null,\n    user: null,\n    loading: false\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case SET_AUTH_LOADING:\n            return {\n                ...state,\n                loading: true\n            }\n        case REMOVE_AUTH_LOADING:\n            return {\n                ...state,\n                loading: false\n            }\n        case USER_LOADED_SUCCESS:\n            return {\n                ...state,\n                user: payload\n            }\n        case USER_LOADED_FAIL:\n            return {\n                ...state,\n                user: null\n            }\n        case AUTHENTICATED_SUCCESS:\n            return {\n                ...state,\n                isAuthenticated: true\n            }\n        case AUTHENTICATED_FAIL:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                isAuthenticated: false,\n                access: null,\n                refresh: null\n            }\n        case LOGIN_SUCCESS:\n        case GOOGLE_AUTH_SUCCESS:\n        case FACEBOOK_AUTH_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            localStorage.setItem('refresh', payload.refresh);\n            return {\n                ...state,\n                isAuthenticated: true,\n                access: localStorage.getItem('access'),\n                refresh: localStorage.getItem('refresh')\n            }\n        case ACTIVATION_SUCCESS:\n        case ACTIVATION_FAIL:\n        case RESET_PASSWORD_SUCCESS:\n        case RESET_PASSWORD_FAIL:\n        case RESET_PASSWORD_CONFIRM_SUCCESS:\n        case RESET_PASSWORD_CONFIRM_FAIL:\n            return {\n                ...state\n            }\n        case REFRESH_SUCCESS:\n            localStorage.setItem('access', payload.access);\n            return {\n                ...state,\n                access: localStorage.getItem('access')\n            }\n        case SIGNUP_SUCCESS:\n        case SIGNUP_FAIL:\n        case LOGIN_FAIL:\n        case GOOGLE_AUTH_FAIL:\n        case FACEBOOK_AUTH_FAIL:\n        case REFRESH_FAIL:\n        case LOGOUT:\n            localStorage.removeItem('access');\n            localStorage.removeItem('refresh');\n            return {\n                ...state,\n                access: null,\n                refresh: null,\n                isAuthenticated: false,\n                user: null\n            }\n        default:\n            return state\n    }\n};\n","import {\n    SET_ALERT,\n    REMOVE_ALERT,\n} from '../actions/types';\n\nconst initialState = {\n    alert: null\n};\n\nexport default function(state = initialState, action) {\n    const { type, payload } = action;\n\n    switch(type) {\n        case SET_ALERT:\n            return {\n                ...state,\n                alert: payload\n            };\n        case REMOVE_ALERT:\n            return {\n                ...state,\n                alert: null\n            }\n        default:\n            return state\n    };\n};\n","import { combineReducers } from 'redux';\nimport auth from './auth';\nimport alert from './alert';\n\nexport default combineReducers({\n    auth,\n    alert\n});\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n    rootReducer,\n    initialState,\n    composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport Layout from './hocs/Layout';\nimport Home from './containers/Home';\nimport Google from './containers/Google';\nimport Facebook from './containers/Facebook';\nimport Dashboard from './containers/Dashboard';\nimport Login from './containers/Login';\nimport Signup from './containers/Signup';\nimport Activate from './containers/Activate';\nimport ResetPassword from './containers/ResetPassword';\nimport ResetPasswordConfirm from './containers/ResetPasswordConfirm';\n\nimport store from './store';\n\nconst App = () => (\n    <Provider store={store}>\n        <Router>\n            <Layout>\n                <Route exact path='/' component={Home} />\n                <Route exact path='/dashboard' component={Dashboard} />\n                <Route exact path='/login' component={Login} />\n                <Route exact path='/signup' component={Signup} />\n                <Route exact path='/google' component={Google} />\n                <Route exact path='/facebook' component={Facebook} />\n                <Route exact path='/activate/:uid/:token' component={Activate} />\n                <Route exact path='/reset_password' component={ResetPassword} />\n                <Route exact path='/password/reset/confirm/:uid/:token' component={ResetPasswordConfirm} />\n            </Layout>\n        </Router>\n    </Provider>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}